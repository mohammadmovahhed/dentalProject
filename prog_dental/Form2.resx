<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZsAAAM3CAYAAADr2f1EAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAGSJJREFUeF7t3StwHGe6x2HDAwMXBqZSkSK4cOFCw4WGh53AZe5ly87CMAeGxdAs
        YYGGC4W2nKOLBQNzvm/6HXskt+S59NvX56n6VbJZ25Llmf67ey569m1z+4ckSZkZG0lSesZGkpSesZEk
        pWdsJEnpGRtJUnrGRpKUnrGRJKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWds
        JEnpGRtJUnrGRpKUnrGRJKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnp
        GRtJUnrGRpKUnrGRJKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnpGRtJ
        UnrGRpKUnrGRJKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnpGRtJUnrG
        RpKUnrGRJKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnpGRtJUnrGRpKU
        nrGRJKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnpGRtJUnrGRpKUnrGR
        JKVnbCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnpGRtJUnrGRpKUnrGRJKVn
        bCRJ6RkbSVJ6xkaSlJ6xkSSlZ2wkSekZG0lSesZGkpSesZEkpWdsJEnpGRtJUnrGRpKUnrGRJKVnbCRJ
        6RkbSaN13tz8Xv55d97c/rv8823556/fNjc/l//+Ovoh+tfDzpqbf9a6/r9S/LzrH8s/X9dfs+32bemy
        fJx35b/Xj935ean/jI2k1OKgflkqY3Lzpg7AWXP9fTsU182YtYN1/X07TPVzq2NXx8gQ9Z2xkdRnd6UY
        lZsfpjAoxxZnTfdGaOf3qQMzNpKOKv72X88Cfpn7sBzWhwGql/7quHZ+fXQ/YyNpr3bGZXPW0n0gXl9x
        Ge618Xk6YyPpqeqD97/WcVnPmctpxfi8KV87l912MjaSHvbh0ljXwVSHtHlm3Pasp+trvZqMjaQ/ysGw
        PhW4Dkw5OHYdNHVq8YSD1Q6PsZFWWjnw/b69RNZ1cFRe2+Epfw6rudRmbKT1VS+TGZjJtLnU9kv5c1n0
        kwuMjbSCysGsnMXc/OJB/sn341IvsxkbadnVs5jXRmZu3fyr/NnVt9ZZzNmOsZGWmUtlC2jnsZ3Zj46x
        kZaVkVls8x4dYyMto/p+ZJ62vIrmOTrGRpp3l+0r1rsOSlp28xodYyPNM5fLFM1jdIyNNK/ujIy6m/bo
        GBtpBpUDSX2dzJvug4y0rT5ut/neO523ozEzNtLEqwcPr5PRYX14nU7nbWqMjI003TwuoxObzqU1YyNN
        rHKAcMlMvXXWXNUXhtb3Xuu8vQ2VsZGmVT2b8XoZJbS5tDbaWY6xkSaQsxkN1zhnOcZGGj9nMxq44c9y
        jI00Ys5mNG7DneUYG2mc7rzNjKbRzQ/19vjg9tl7xkYavPdvvW5G02rzYtDUb9pmbKSBKndoTwLQxMu7
        rGZspGFy2UyzqN5O6+31we335IyNlJ7LZppbm8tq77pvz8dlbKSkXDbT/OvvTT2NjZSTy2ZaSP08jmNs
        pN5z2UyL68d6pt59e98vYyP1mMtmWm6nveuAsZH6yWUzraDjB8fYSCdWXwznspnW03HPVDM20gm5bKY1
        1n6PnMMGx9hIx+WymVZfuR/s/a2njY10YC6bSR8r94m9BsfYSAfkspn0aeW+8dnBMTbSfrlsJj1RuY88
        OTjGRvp8ly6bSZ+v3FceHRxjIz2Ry2bSYZX7zeXD+1HN2Ejd3ZWh+aHrziTp8R57WrSxkT7NZTPphOrg
        lPvRvXcaMDbSTi6bSX11/61tjI3U5rKZ1Hv1rW3ad4s2NpLLZlJiNz/U+5mx0cp7/3P3HURSf928MTZa
        ay6bSQNmbLTGLttryd13Ckn9Z2y0slw2k8bI2GgtuWwmjZix0Rpy2UwaOWOjheeymTSFjI0WWTmT+d1l
        M2k6GRstMZfNpIllbLSozpvbX7tu6JLGzdhoEblsJk07Y6Ml5LKZNPGMjWady2bSPDI2mmUum0nzytho
        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
</value>
  </data>
</root>